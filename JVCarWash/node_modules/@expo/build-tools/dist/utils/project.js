"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.setup = void 0;
const path_1 = __importDefault(require("path"));
const downloader_1 = __importDefault(require("@expo/downloader"));
const turtle_spawn_1 = __importDefault(require("@expo/turtle-spawn"));
async function setup(ctx) {
    var _a;
    const { job, logger } = ctx;
    const buildDirectory = path_1.default.join(ctx.workingdir, 'build');
    const projectTarball = path_1.default.join(ctx.workingdir, 'project.tar.gz');
    logger.info({ projectUrl: job.projectUrl }, 'Download project archive');
    await downloader_1.default(job.projectUrl, projectTarball);
    logger.info('Unpacking project archive');
    await turtle_spawn_1.default('tar', ['--strip-components', '1', '-zxf', 'project.tar.gz', '-C', buildDirectory], {
        cwd: ctx.workingdir,
        logger,
    });
    logger.info('Running yarn');
    await turtle_spawn_1.default('yarn', ['install'], {
        cwd: buildDirectory,
        logger,
        env: {
            ...process.env,
            ...(_a = job.secrets) === null || _a === void 0 ? void 0 : _a.secretEnvs,
        },
    });
    return buildDirectory;
}
exports.setup = setup;
//# sourceMappingURL=project.js.map