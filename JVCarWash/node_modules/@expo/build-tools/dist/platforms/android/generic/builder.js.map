{"version":3,"file":"builder.js","sourceRoot":"","sources":["../../../../src/platforms/android/generic/builder.ts"],"names":[],"mappings":";;;;;AAAA,gDAAwB;AAExB,sEAAuC;AAIvC,oDAA+C;AAC/C,sDAA0D;AAI1D,MAAM,OAAO,GAA+B,KAAK,UAAU,YAAY,CACrE,GAAkC;;IAElC,MAAM,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC;IAE5B,MAAM,cAAc,GAAG,MAAM,eAAK,CAAC,GAAG,CAAC,CAAC;IACxC,MAAM,2BAA2B,GAAG,cAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,oBAAoB,CAAC,CAAC;IACxF,MAAM,sBAAsB,GAAG,cAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;IAEjF,MAAM,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;IAC1D,IAAI,GAAG,CAAC,OAAO,CAAC,gBAAgB,EAAE;QAChC,MAAM,gCAAkB,CAAC,2BAA2B,EAAE,GAAG,CAAC,CAAC;KAC5D;IAED,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IACrC,MAAM,CAAC,KAAK,CAAC,sBAAsB,GAAG,CAAC,aAAa,QAAQ,sBAAsB,EAAE,CAAC,CAAC;IACtF,MAAM,sBAAK,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;QAC5C,GAAG,EAAE,sBAAsB;QAC3B,MAAM;QACN,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE;YACxB,IAAI,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBAC/B,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,IAAI,CAAC;aACb;QACH,CAAC;QACD,GAAG,EAAE;YACH,GAAG,OAAO,CAAC,GAAG;YACd,SAAG,GAAG,CAAC,OAAO,0CAAE,UAAU;SAC3B;KACF,CAAC,CAAC;IAEH,OAAO;QACL,gBAAgB,EAAE,2BAA2B;QAC7C,YAAY,EAAE,GAAG,CAAC,YAAY;KAC/B,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,OAAO,CAAC","sourcesContent":["import path from 'path';\n\nimport spawn from '@expo/turtle-spawn';\n\nimport { BuilderCtx } from '../../../context';\nimport { Builder, BuildResult } from '../../../builder';\nimport { setup } from '../../../utils/project';\nimport { restoreCredentials } from '../utils/credentials';\n\nimport { GenericAndroidJob } from './job';\n\nconst builder: Builder<GenericAndroidJob> = async function buildGeneric(\n  ctx: BuilderCtx<GenericAndroidJob>,\n): Promise<BuildResult> {\n  const { job, logger } = ctx;\n\n  const buildDirectory = await setup(ctx);\n  const reactNativeProjectDirectory = path.join(buildDirectory, job.projectRootDirectory);\n  const nativeProjectDirectory = path.join(reactNativeProjectDirectory, 'android');\n\n  logger.info(\"Writing secrets to the project's directory\");\n  if (job.secrets.buildCredentials) {\n    await restoreCredentials(reactNativeProjectDirectory, job);\n  }\n\n  logger.info('Starting gradle build');\n  logger.debug(`Running './gradlew ${job.gradleCommand}' in ${nativeProjectDirectory}`);\n  await spawn('./gradlew', [job.gradleCommand], {\n    cwd: nativeProjectDirectory,\n    logger,\n    lineTransformer: (line) => {\n      if (!line || /^\\.+$/.exec(line)) {\n        return null;\n      } else {\n        return line;\n      }\n    },\n    env: {\n      ...process.env,\n      ...job.secrets?.secretEnvs,\n    }\n  });\n\n  return {\n    projectDirectory: reactNativeProjectDirectory,\n    artifactPath: job.artifactPath,\n  };\n};\n\nexport default builder;\n"]}