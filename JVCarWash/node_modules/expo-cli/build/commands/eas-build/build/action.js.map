{"version":3,"sources":["../../../../src/commands/eas-build/build/action.ts"],"names":["buildAction","projectDir","options","buildCommandPlatforms","Object","values","BuildCommandPlatform","platform","requestedPlatform","profile","includes","Error","map","p","log","chalk","bold","join","trackingCtx","tracking_id","requested_platform","Analytics","logEvent","AnalyticsEvent","BUILD_COMMAND","commandCtx","nonInteractive","parent","skipCredentialsCheck","skipProjectConfiguration","projectId","user","accountName","projectName","scheduledBuilds","startBuildsAsync","newLine","wait","builds","waitForBuildEndAsync","i","buildId","client","ApiV2","clientForUser","easConfig","EasJsonReader","readAsync","ANDROID","ALL","builderContext","Platform","Android","builder","AndroidBuilder","startBuildAsync","push","IOS","iOS","iOSBuilder","tarPath","path","os","tmpdir","setupAsync","credentialsSource","ensureCredentialsAsync","GATHER_CREDENTIALS_SUCCESS","ctx","properties","error","GATHER_CREDENTIALS_FAIL","reason","message","ensureProjectConfiguredAsync","CONFIGURE_PROJECT_SUCCESS","CONFIGURE_PROJECT_FAIL","archiveUrl","fileSize","UploadType","TURTLE_PROJECT_SOURCES","PROJECT_UPLOAD_SUCCESS","PROJECT_UPLOAD_FAIL","metadata","job","prepareJobAsync","platformDisplayNames","postAsync","BUILD_REQUEST_SUCCESS","BUILD_REQUEST_FAIL","fs","remove","buildIds","timeoutSec","intervalSec","spinner","start","time","Date","getTime","endTime","Promise","all","getAsync","err","length","status","BuildStatus","FINISHED","succeed","IN_QUEUE","text","IN_PROGRESS","ERRORED","fail","warn","filter","build","inQueue","inProgress","errored","finished","unknownState","red","green"],"mappings":"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","sourcesContent":["import { Platform } from '@expo/build-tools';\nimport { Analytics, ApiV2 } from '@expo/xdl';\nimport chalk from 'chalk';\nimport delayAsync from 'delay-async';\nimport fs from 'fs-extra';\nimport ora from 'ora';\nimport os from 'os';\nimport path from 'path';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { CredentialsSource, EasJsonReader } from '../../../easJson';\nimport log from '../../../log';\nimport { ensureProjectExistsAsync } from '../../../projects';\nimport { UploadType, uploadAsync } from '../../../uploads';\nimport { createProgressTracker } from '../../utils/progress';\nimport { platformDisplayNames } from '../constants';\nimport {\n  AnalyticsEvent,\n  Build,\n  BuildCommandPlatform,\n  BuildStatus,\n  Builder,\n  CommandContext,\n} from '../types';\nimport createBuilderContext from '../utils/createBuilderContext';\nimport createCommandContextAsync from '../utils/createCommandContextAsync';\nimport {\n  ensureGitRepoExistsAsync,\n  ensureGitStatusIsCleanAsync,\n  makeProjectTarballAsync,\n} from '../utils/git';\nimport { printBuildResults, printLogsUrls } from '../utils/misc';\nimport AndroidBuilder from './builders/AndroidBuilder';\nimport iOSBuilder from './builders/iOSBuilder';\nimport { collectMetadata } from './metadata';\n\ninterface BuildOptions {\n  platform: BuildCommandPlatform;\n  skipCredentialsCheck?: boolean;\n  skipProjectConfiguration?: boolean;\n  wait?: boolean;\n  profile: string;\n  parent?: {\n    nonInteractive: boolean;\n  };\n}\n\nasync function buildAction(projectDir: string, options: BuildOptions): Promise<void> {\n  const buildCommandPlatforms = Object.values(BuildCommandPlatform);\n\n  const { platform: requestedPlatform, profile } = options;\n  if (!requestedPlatform || !buildCommandPlatforms.includes(requestedPlatform)) {\n    throw new Error(\n      `-p/--platform is required, valid platforms: ${buildCommandPlatforms\n        .map(p => log.chalk.bold(p))\n        .join(', ')}`\n    );\n  }\n\n  const trackingCtx = {\n    tracking_id: uuidv4(),\n    requested_platform: options.platform,\n  };\n  Analytics.logEvent(AnalyticsEvent.BUILD_COMMAND, trackingCtx);\n\n  await ensureGitRepoExistsAsync();\n  await ensureGitStatusIsCleanAsync();\n\n  const commandCtx = await createCommandContextAsync({\n    requestedPlatform,\n    profile,\n    projectDir,\n    trackingCtx,\n    nonInteractive: options.parent?.nonInteractive,\n    skipCredentialsCheck: options?.skipCredentialsCheck,\n    skipProjectConfiguration: options?.skipProjectConfiguration,\n  });\n\n  const projectId = await ensureProjectExistsAsync(commandCtx.user, {\n    accountName: commandCtx.accountName,\n    projectName: commandCtx.projectName,\n  });\n  const scheduledBuilds = await startBuildsAsync(commandCtx, projectId);\n  log.newLine();\n  await printLogsUrls(commandCtx.accountName, scheduledBuilds);\n  log.newLine();\n\n  if (options.wait) {\n    const builds = await waitForBuildEndAsync(\n      commandCtx,\n      projectId,\n      scheduledBuilds.map(i => i.buildId)\n    );\n    printBuildResults(builds);\n  }\n}\n\nasync function startBuildsAsync(\n  commandCtx: CommandContext,\n  projectId: string\n): Promise<\n  { platform: BuildCommandPlatform.ANDROID | BuildCommandPlatform.IOS; buildId: string }[]\n> {\n  const client = ApiV2.clientForUser(commandCtx.user);\n  const scheduledBuilds: {\n    platform: BuildCommandPlatform.ANDROID | BuildCommandPlatform.IOS;\n    buildId: string;\n  }[] = [];\n  const easConfig = await new EasJsonReader(\n    commandCtx.projectDir,\n    commandCtx.requestedPlatform\n  ).readAsync(commandCtx.profile);\n  if (\n    [BuildCommandPlatform.ANDROID, BuildCommandPlatform.ALL].includes(commandCtx.requestedPlatform)\n  ) {\n    const builderContext = createBuilderContext<Platform.Android>({\n      commandCtx,\n      platform: Platform.Android,\n      easConfig,\n    });\n    const builder = new AndroidBuilder(builderContext);\n    const buildId = await startBuildAsync(client, { builder, projectId });\n    scheduledBuilds.push({ platform: BuildCommandPlatform.ANDROID, buildId });\n  }\n  if ([BuildCommandPlatform.IOS, BuildCommandPlatform.ALL].includes(commandCtx.requestedPlatform)) {\n    const builderContext = createBuilderContext<Platform.iOS>({\n      commandCtx,\n      platform: Platform.iOS,\n      easConfig,\n    });\n    const builder = new iOSBuilder(builderContext);\n    const buildId = await startBuildAsync(client, { builder, projectId });\n    scheduledBuilds.push({ platform: BuildCommandPlatform.IOS, buildId });\n  }\n  return scheduledBuilds;\n}\n\nasync function startBuildAsync<T extends Platform>(\n  client: ApiV2,\n  {\n    projectId,\n    builder,\n  }: {\n    projectId: string;\n    builder: Builder<T>;\n  }\n): Promise<string> {\n  const tarPath = path.join(os.tmpdir(), `${uuidv4()}.tar.gz`);\n  try {\n    await builder.setupAsync();\n    let credentialsSource: CredentialsSource.LOCAL | CredentialsSource.REMOTE | undefined;\n    try {\n      credentialsSource = await builder.ensureCredentialsAsync();\n      Analytics.logEvent(\n        AnalyticsEvent.GATHER_CREDENTIALS_SUCCESS,\n        builder.ctx.trackingCtx.properties\n      );\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.GATHER_CREDENTIALS_FAIL, {\n        ...builder.ctx.trackingCtx,\n        reason: error.message,\n      });\n      throw error;\n    }\n    if (!builder.ctx.commandCtx.skipProjectConfiguration) {\n      try {\n        await builder.ensureProjectConfiguredAsync();\n        Analytics.logEvent(\n          AnalyticsEvent.CONFIGURE_PROJECT_SUCCESS,\n          builder.ctx.trackingCtx.properties\n        );\n      } catch (error) {\n        Analytics.logEvent(AnalyticsEvent.CONFIGURE_PROJECT_FAIL, {\n          ...builder.ctx.trackingCtx,\n          reason: error.message,\n        });\n        throw error;\n      }\n    }\n\n    let archiveUrl;\n    try {\n      const fileSize = await makeProjectTarballAsync(tarPath);\n\n      log('Uploading project to AWS S3');\n      archiveUrl = await uploadAsync(\n        UploadType.TURTLE_PROJECT_SOURCES,\n        tarPath,\n        createProgressTracker(fileSize)\n      );\n      Analytics.logEvent(AnalyticsEvent.PROJECT_UPLOAD_SUCCESS, builder.ctx.trackingCtx.properties);\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.PROJECT_UPLOAD_FAIL, {\n        ...builder.ctx.trackingCtx,\n        reason: error.message,\n      });\n      throw error;\n    }\n\n    const metadata = await collectMetadata(builder.ctx, {\n      credentialsSource,\n    });\n    const job = await builder.prepareJobAsync(archiveUrl);\n    log(`Starting ${platformDisplayNames[job.platform]} build`);\n\n    try {\n      const { buildId } = await client.postAsync(`projects/${projectId}/builds`, {\n        job,\n        metadata,\n      } as any);\n      Analytics.logEvent(AnalyticsEvent.BUILD_REQUEST_SUCCESS, builder.ctx.trackingCtx.properties);\n      return buildId;\n    } catch (error) {\n      Analytics.logEvent(AnalyticsEvent.BUILD_REQUEST_FAIL, {\n        ...builder.ctx.trackingCtx,\n        reason: error.message,\n      });\n      throw error;\n    }\n  } finally {\n    await fs.remove(tarPath);\n  }\n}\n\nasync function waitForBuildEndAsync(\n  commandCtx: CommandContext,\n  projectId: string,\n  buildIds: string[],\n  { timeoutSec = 1800, intervalSec = 30 } = {}\n): Promise<(Build | null)[]> {\n  const client = ApiV2.clientForUser(commandCtx.user);\n  log('Waiting for build to complete. You can press Ctrl+C to exit.');\n  const spinner = ora().start();\n  let time = new Date().getTime();\n  const endTime = time + timeoutSec * 1000;\n  while (time <= endTime) {\n    const builds: (Build | null)[] = await Promise.all(\n      buildIds.map(buildId => {\n        try {\n          return client.getAsync(`projects/${projectId}/builds/${buildId}`);\n        } catch (err) {\n          return null;\n        }\n      })\n    );\n    if (builds.length === 1) {\n      switch (builds[0]?.status) {\n        case BuildStatus.FINISHED:\n          spinner.succeed('Build finished.');\n          return builds;\n        case BuildStatus.IN_QUEUE:\n          spinner.text = 'Build queued...';\n          break;\n        case BuildStatus.IN_PROGRESS:\n          spinner.text = 'Build in progress...';\n          break;\n        case BuildStatus.ERRORED:\n          spinner.fail('Build failed.');\n          throw new Error(`Standalone build failed!`);\n        default:\n          spinner.warn('Unknown status.');\n          throw new Error(`Unknown status: ${builds} - aborting!`);\n      }\n    } else {\n      if (builds.filter(build => build?.status === BuildStatus.FINISHED).length === builds.length) {\n        spinner.succeed('All build have finished.');\n        return builds;\n      } else if (\n        builds.filter(build =>\n          build?.status ? [BuildStatus.FINISHED, BuildStatus.ERRORED].includes(build.status) : false\n        ).length === builds.length\n      ) {\n        spinner.fail('Some of the builds failed.');\n        return builds;\n      } else {\n        const inQueue = builds.filter(build => build?.status === BuildStatus.IN_QUEUE).length;\n        const inProgress = builds.filter(build => build?.status === BuildStatus.IN_PROGRESS).length;\n        const errored = builds.filter(build => build?.status === BuildStatus.ERRORED).length;\n        const finished = builds.filter(build => build?.status === BuildStatus.FINISHED).length;\n        const unknownState = builds.length - inQueue - inProgress - errored - finished;\n        spinner.text = [\n          inQueue && `Builds in queue: ${inQueue}`,\n          inProgress && `Builds in progress: ${inProgress}`,\n          errored && chalk.red(`Builds failed: ${errored}`),\n          finished && chalk.green(`Builds finished: ${finished}`),\n          unknownState && chalk.red(`Builds in unknown state: ${unknownState}`),\n        ]\n          .filter(i => i)\n          .join('\\t');\n      }\n    }\n    time = new Date().getTime();\n    await delayAsync(intervalSec * 1000);\n  }\n  spinner.warn('Timed out.');\n  throw new Error(\n    'Timeout reached! It is taking longer than expected to finish the build, aborting...'\n  );\n}\n\nexport default buildAction;\n"],"file":"action.js"}